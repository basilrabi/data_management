# Generated by Django 4.0.4 on 2022-05-05 06:41

import custom.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('personnel', '0001_initial'),
        ('location', '0001_initial'),
        ('shipment', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('fleet', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Laboratory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', custom.fields.NameField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'laboratories',
            },
        ),
        migrations.CreateModel(
            name='Lithology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', custom.fields.NameField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'lithologies',
            },
        ),
        migrations.CreateModel(
            name='MiningSample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_received_for_preparation', models.DateField(blank=True, null=True)),
                ('date_prepared', models.DateField(blank=True, null=True)),
                ('date_received_for_analysis', models.DateField(blank=True, null=True)),
                ('date_analyzed', models.DateField(blank=True, null=True)),
                ('al', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Al')),
                ('al2o3', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Al₂O₃')),
                ('arsenic', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%As')),
                ('c', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%C')),
                ('cao', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%CaO')),
                ('co', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Co')),
                ('cr', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Cr')),
                ('cr2o3', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Cr₂O₃')),
                ('fe', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Fe')),
                ('mg', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Mg')),
                ('mgo', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%MgO')),
                ('mn', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Mn')),
                ('ni', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Ni')),
                ('p', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%P')),
                ('s', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%S')),
                ('sc', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Sc')),
                ('si', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Si')),
                ('sio2', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%SiO₂')),
                ('ignition_loss', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('moisture', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%H₂O')),
                ('series_number', models.PositiveSmallIntegerField()),
                ('material', models.CharField(blank=True, max_length=1, null=True)),
                ('ridge', models.CharField(blank=True, max_length=2, null=True)),
                ('start_collection', models.DateField(blank=True, null=True)),
                ('month', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('end_collection', models.DateField(blank=True, null=True)),
                ('trips', models.PositiveSmallIntegerField(default=0)),
                ('ready_for_delivery', models.BooleanField(default=False)),
                ('dumping_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.stockpile')),
            ],
            options={
                'ordering': ['-start_collection__year', '-month', '-series_number'],
            },
        ),
        migrations.CreateModel(
            name='PilingMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', custom.fields.NameField(max_length=20, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ShipmentDischargeAssay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_received_for_preparation', models.DateField(blank=True, null=True)),
                ('date_prepared', models.DateField(blank=True, null=True)),
                ('date_received_for_analysis', models.DateField(blank=True, null=True)),
                ('date_analyzed', models.DateField(blank=True, null=True)),
                ('al', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Al')),
                ('al2o3', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Al₂O₃')),
                ('arsenic', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%As')),
                ('c', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%C')),
                ('cao', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%CaO')),
                ('co', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Co')),
                ('cr', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Cr')),
                ('cr2o3', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Cr₂O₃')),
                ('fe', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Fe')),
                ('mg', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Mg')),
                ('mgo', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%MgO')),
                ('mn', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Mn')),
                ('ni', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Ni')),
                ('p', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%P')),
                ('s', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%S')),
                ('sc', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Sc')),
                ('si', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Si')),
                ('sio2', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%SiO₂')),
                ('ignition_loss', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('moisture', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%H₂O')),
                ('wmt', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='WMT')),
                ('dmt', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='DMT')),
                ('ni_ton', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='Ni-ton')),
                ('laboratory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sampling.laboratory')),
                ('shipment', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='shipment.shipment')),
            ],
            options={
                'ordering': ['-shipment__laydaysstatement__completed_loading'],
            },
        ),
        migrations.CreateModel(
            name='ShipmentLoadingAssay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_received_for_preparation', models.DateField(blank=True, null=True)),
                ('date_prepared', models.DateField(blank=True, null=True)),
                ('date_received_for_analysis', models.DateField(blank=True, null=True)),
                ('date_analyzed', models.DateField(blank=True, null=True)),
                ('al', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Al')),
                ('al2o3', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Al₂O₃')),
                ('arsenic', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%As')),
                ('c', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%C')),
                ('cao', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%CaO')),
                ('co', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Co')),
                ('cr', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Cr')),
                ('cr2o3', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Cr₂O₃')),
                ('fe', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Fe')),
                ('mg', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Mg')),
                ('mgo', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%MgO')),
                ('mn', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Mn')),
                ('ni', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Ni')),
                ('p', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%P')),
                ('s', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%S')),
                ('sc', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Sc')),
                ('si', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Si')),
                ('sio2', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%SiO₂')),
                ('ignition_loss', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('moisture', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%H₂O')),
                ('date', models.DateField()),
                ('wmt', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='WMT')),
                ('dmt', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='DMT')),
                ('ni_ton', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='Ni-ton')),
                ('chemist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('shipment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='shipment.shipment')),
            ],
            options={
                'ordering': ['-shipment__laydaysstatement__completed_loading'],
            },
        ),
        migrations.CreateModel(
            name='TripsPerPile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effectivity', models.DateField()),
                ('end', models.DateField(blank=True, null=True)),
                ('trips', models.PositiveSmallIntegerField()),
                ('piling_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sampling.pilingmethod')),
            ],
            options={
                'ordering': ['-effectivity'],
            },
        ),
        migrations.CreateModel(
            name='ShipmentLoadingLotAssay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_received_for_preparation', models.DateField(blank=True, null=True)),
                ('date_prepared', models.DateField(blank=True, null=True)),
                ('date_received_for_analysis', models.DateField(blank=True, null=True)),
                ('date_analyzed', models.DateField(blank=True, null=True)),
                ('al', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Al')),
                ('al2o3', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Al₂O₃')),
                ('arsenic', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%As')),
                ('c', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%C')),
                ('cao', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%CaO')),
                ('co', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Co')),
                ('cr', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Cr')),
                ('cr2o3', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Cr₂O₃')),
                ('fe', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Fe')),
                ('mg', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Mg')),
                ('mgo', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%MgO')),
                ('mn', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Mn')),
                ('ni', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Ni')),
                ('p', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%P')),
                ('s', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%S')),
                ('sc', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Sc')),
                ('si', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Si')),
                ('sio2', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%SiO₂')),
                ('ignition_loss', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('moisture', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%H₂O')),
                ('lot', models.PositiveSmallIntegerField()),
                ('wmt', models.DecimalField(decimal_places=3, max_digits=8, verbose_name='WMT')),
                ('shipment_assay', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sampling.shipmentloadingassay')),
            ],
            options={
                'ordering': ['lot'],
            },
        ),
        migrations.CreateModel(
            name='ShipmentDischargeLotAssay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_received_for_preparation', models.DateField(blank=True, null=True)),
                ('date_prepared', models.DateField(blank=True, null=True)),
                ('date_received_for_analysis', models.DateField(blank=True, null=True)),
                ('date_analyzed', models.DateField(blank=True, null=True)),
                ('al', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Al')),
                ('al2o3', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Al₂O₃')),
                ('arsenic', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%As')),
                ('c', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%C')),
                ('cao', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%CaO')),
                ('co', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Co')),
                ('cr', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Cr')),
                ('cr2o3', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Cr₂O₃')),
                ('fe', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Fe')),
                ('mg', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Mg')),
                ('mgo', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%MgO')),
                ('mn', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Mn')),
                ('ni', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Ni')),
                ('p', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%P')),
                ('s', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%S')),
                ('sc', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Sc')),
                ('si', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Si')),
                ('sio2', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%SiO₂')),
                ('ignition_loss', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('moisture', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%H₂O')),
                ('lot', models.PositiveSmallIntegerField()),
                ('wmt', models.DecimalField(decimal_places=3, max_digits=8, verbose_name='WMT')),
                ('shipment_assay', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sampling.shipmentdischargeassay')),
            ],
            options={
                'ordering': ['lot'],
            },
        ),
        migrations.CreateModel(
            name='MiningSampleReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('shift_collected', models.CharField(choices=[('D', 'Day'), ('N', 'Night'), ('M', 'M')], max_length=1)),
                ('dumping_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.stockpile')),
                ('foreman', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managedminingsamplereport', to='personnel.person')),
                ('piling_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sampling.pilingmethod')),
                ('sampler', models.ManyToManyField(blank=True, related_name='samplereport', to='personnel.person')),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='location.cluster')),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervisedminingsamplereport', to='personnel.person')),
                ('tx', models.ManyToManyField(to='fleet.trackedexcavator', verbose_name='TX')),
            ],
            options={
                'ordering': ['-date', '-shift_collected'],
            },
        ),
        migrations.CreateModel(
            name='MiningSampleIncrement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trips', models.PositiveSmallIntegerField()),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sampling.miningsamplereport')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sampling.miningsample')),
            ],
            options={
                'ordering': ['sample__series_number'],
            },
        ),
        migrations.AddField(
            model_name='miningsample',
            name='piling_method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sampling.pilingmethod'),
        ),
        migrations.CreateModel(
            name='DrillCoreSample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_received_for_preparation', models.DateField(blank=True, null=True)),
                ('date_prepared', models.DateField(blank=True, null=True)),
                ('date_received_for_analysis', models.DateField(blank=True, null=True)),
                ('date_analyzed', models.DateField(blank=True, null=True)),
                ('al', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Al')),
                ('al2o3', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Al₂O₃')),
                ('arsenic', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%As')),
                ('c', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%C')),
                ('cao', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%CaO')),
                ('co', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Co')),
                ('cr', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Cr')),
                ('cr2o3', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Cr₂O₃')),
                ('fe', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Fe')),
                ('mg', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Mg')),
                ('mgo', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%MgO')),
                ('mn', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Mn')),
                ('ni', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Ni')),
                ('p', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%P')),
                ('s', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%S')),
                ('sc', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Sc')),
                ('si', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%Si')),
                ('sio2', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%SiO₂')),
                ('ignition_loss', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('moisture', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='%H₂O')),
                ('interval_from', models.DecimalField(decimal_places=3, max_digits=5)),
                ('interval_to', models.DecimalField(decimal_places=3, max_digits=5)),
                ('description', models.TextField(blank=True, null=True)),
                ('excavated_date', models.DateField(blank=True, null=True)),
                ('drill_hole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.drillhole')),
                ('lithology', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sampling.lithology')),
                ('lithology_modified', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drillcore', to='sampling.lithology')),
            ],
            options={
                'ordering': ['interval_from'],
            },
        ),
        migrations.CreateModel(
            name='ApprovedShipmentLoadingAssay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved', models.BooleanField()),
                ('certificate', models.FileField(blank=True, null=True, upload_to='assay/shipment/loading/')),
                ('assay', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='sampling.shipmentloadingassay')),
            ],
            options={
                'ordering': [django.db.models.expressions.OrderBy(django.db.models.expressions.F('approved'), nulls_first=True), '-assay__shipment__laydaysstatement__completed_loading'],
            },
        ),
        migrations.CreateModel(
            name='ApprovedShipmentDischargeAssay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved', models.BooleanField()),
                ('certificate', models.FileField(blank=True, null=True, upload_to='assay/shipment/discharing/')),
                ('assay', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='sampling.shipmentdischargeassay')),
            ],
            options={
                'ordering': [django.db.models.expressions.OrderBy(django.db.models.expressions.F('approved'), nulls_first=True), '-assay__shipment__laydaysstatement__completed_loading'],
            },
        ),
        migrations.CreateModel(
            name='AcquiredMiningSample',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('sampling.miningsample',),
        ),
        migrations.CreateModel(
            name='ChinaShipmentAssay',
            fields=[
            ],
            options={
                'verbose_name': 'China Shipment Discharge Assay',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('sampling.shipmentdischargeassay',),
        ),
        migrations.CreateModel(
            name='DrillCore',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('sampling.drillcoresample',),
        ),
        migrations.CreateModel(
            name='DrillCoreAssay',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('sampling.drillcoresample',),
        ),
        migrations.CreateModel(
            name='MiningSampleAssay',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('sampling.miningsample',),
        ),
        migrations.CreateModel(
            name='PamcoShipmentAssay',
            fields=[
            ],
            options={
                'verbose_name': 'PAMCO Shipment Discharge Assay',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('sampling.shipmentdischargeassay',),
        ),
        migrations.AddConstraint(
            model_name='tripsperpile',
            constraint=models.CheckConstraint(check=models.Q(('trips__gt', 0)), name='trips_min_1'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('al__lte', 100)), name='al_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('al2o3__lte', 100)), name='al2o3_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('arsenic__lte', 100)), name='arsenic_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('c__lte', 100)), name='c_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('cao__lte', 100)), name='cao_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('co__lte', 100)), name='co_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('cr__lte', 100)), name='cr_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('fe__lte', 100)), name='fe_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('mg__lte', 100)), name='mg_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('mgo__lte', 100)), name='mgo_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('mn__lte', 100)), name='mn_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('ni__lte', 100)), name='ni_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('p__lte', 100)), name='p_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('s__lte', 100)), name='s_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('sc__lte', 100)), name='sc_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('si__lte', 100)), name='si_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('sio2__lte', 100)), name='sio2_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('ignition_loss__lte', 100)), name='ignition_loss_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('moisture__lte', 100)), name='moisture_max_100_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('al__gte', 0)), name='al_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('al2o3__gte', 0)), name='al2o3_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('arsenic__gte', 0)), name='arsenic_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('c__gte', 0)), name='c_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('cao__gte', 0)), name='cao_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('co__gte', 0)), name='co_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('cr__gte', 0)), name='cr_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('fe__gte', 0)), name='fe_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('mg__gte', 0)), name='mg_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('mgo__gte', 0)), name='mgo_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('mn__gte', 0)), name='mn_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('ni__gte', 0)), name='ni_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('p__gte', 0)), name='p_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('s__gte', 0)), name='s_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('sc__gte', 0)), name='sc_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('si__gte', 0)), name='si_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('sio2__gte', 0)), name='sio2_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('ignition_loss__gte', 0)), name='ignition_loss_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.CheckConstraint(check=models.Q(('moisture__gte', 0)), name='moisture_min_0_loadinglotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadinglotassay',
            constraint=models.UniqueConstraint(fields=('shipment_assay', 'lot'), name='unique_loading_assay_lot'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('al__lte', 100)), name='al_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('al2o3__lte', 100)), name='al2o3_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('arsenic__lte', 100)), name='arsenic_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('c__lte', 100)), name='c_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('cao__lte', 100)), name='cao_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('co__lte', 100)), name='co_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('cr__lte', 100)), name='cr_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('fe__lte', 100)), name='fe_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('mg__lte', 100)), name='mg_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('mgo__lte', 100)), name='mgo_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('mn__lte', 100)), name='mn_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('ni__lte', 100)), name='ni_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('p__lte', 100)), name='p_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('s__lte', 100)), name='s_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('sc__lte', 100)), name='sc_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('si__lte', 100)), name='si_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('sio2__lte', 100)), name='sio2_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('ignition_loss__lte', 100)), name='ignition_loss_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('moisture__lte', 100)), name='moisture_max_100_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('al__gte', 0)), name='al_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('al2o3__gte', 0)), name='al2o3_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('arsenic__gte', 0)), name='arsenic_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('c__gte', 0)), name='c_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('cao__gte', 0)), name='cao_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('co__gte', 0)), name='co_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('cr__gte', 0)), name='cr_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('fe__gte', 0)), name='fe_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('mg__gte', 0)), name='mg_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('mgo__gte', 0)), name='mgo_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('mn__gte', 0)), name='mn_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('ni__gte', 0)), name='ni_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('p__gte', 0)), name='p_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('s__gte', 0)), name='s_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('sc__gte', 0)), name='sc_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('si__gte', 0)), name='si_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('sio2__gte', 0)), name='sio2_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('ignition_loss__gte', 0)), name='ignition_loss_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentloadingassay',
            constraint=models.CheckConstraint(check=models.Q(('moisture__gte', 0)), name='moisture_min_0_loadingassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('al__lte', 100)), name='al_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('al2o3__lte', 100)), name='al2o3_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('arsenic__lte', 100)), name='arsenic_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('c__lte', 100)), name='c_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('cao__lte', 100)), name='cao_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('co__lte', 100)), name='co_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('cr__lte', 100)), name='cr_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('fe__lte', 100)), name='fe_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('mg__lte', 100)), name='mg_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('mgo__lte', 100)), name='mgo_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('mn__lte', 100)), name='mn_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('ni__lte', 100)), name='ni_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('p__lte', 100)), name='p_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('s__lte', 100)), name='s_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('sc__lte', 100)), name='sc_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('si__lte', 100)), name='si_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('sio2__lte', 100)), name='sio2_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('ignition_loss__lte', 100)), name='ignition_loss_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('moisture__lte', 100)), name='moisture_max_100_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('al__gte', 0)), name='al_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('al2o3__gte', 0)), name='al2o3_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('arsenic__gte', 0)), name='arsenic_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('c__gte', 0)), name='c_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('cao__gte', 0)), name='cao_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('co__gte', 0)), name='co_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('cr__gte', 0)), name='cr_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('fe__gte', 0)), name='fe_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('mg__gte', 0)), name='mg_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('mgo__gte', 0)), name='mgo_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('mn__gte', 0)), name='mn_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('ni__gte', 0)), name='ni_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('p__gte', 0)), name='p_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('s__gte', 0)), name='s_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('sc__gte', 0)), name='sc_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('si__gte', 0)), name='si_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('sio2__gte', 0)), name='sio2_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('ignition_loss__gte', 0)), name='ignition_loss_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.CheckConstraint(check=models.Q(('moisture__gte', 0)), name='moisture_min_0_dischargelotassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargelotassay',
            constraint=models.UniqueConstraint(fields=('shipment_assay', 'lot'), name='unique_pamco_assay_lot'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('al__lte', 100)), name='al_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('al2o3__lte', 100)), name='al2o3_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('arsenic__lte', 100)), name='arsenic_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('c__lte', 100)), name='c_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('cao__lte', 100)), name='cao_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('co__lte', 100)), name='co_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('cr__lte', 100)), name='cr_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('fe__lte', 100)), name='fe_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('mg__lte', 100)), name='mg_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('mgo__lte', 100)), name='mgo_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('mn__lte', 100)), name='mn_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('ni__lte', 100)), name='ni_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('p__lte', 100)), name='p_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('s__lte', 100)), name='s_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('sc__lte', 100)), name='sc_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('si__lte', 100)), name='si_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('sio2__lte', 100)), name='sio2_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('ignition_loss__lte', 100)), name='ignition_loss_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('moisture__lte', 100)), name='moisture_max_100_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('al__gte', 0)), name='al_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('al2o3__gte', 0)), name='al2o3_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('arsenic__gte', 0)), name='arsenic_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('c__gte', 0)), name='c_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('cao__gte', 0)), name='cao_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('co__gte', 0)), name='co_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('cr__gte', 0)), name='cr_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('fe__gte', 0)), name='fe_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('mg__gte', 0)), name='mg_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('mgo__gte', 0)), name='mgo_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('mn__gte', 0)), name='mn_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('ni__gte', 0)), name='ni_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('p__gte', 0)), name='p_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('s__gte', 0)), name='s_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('sc__gte', 0)), name='sc_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('si__gte', 0)), name='si_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('sio2__gte', 0)), name='sio2_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('ignition_loss__gte', 0)), name='ignition_loss_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='shipmentdischargeassay',
            constraint=models.CheckConstraint(check=models.Q(('moisture__gte', 0)), name='moisture_min_0_dischargeassay'),
        ),
        migrations.AddConstraint(
            model_name='miningsampleincrement',
            constraint=models.UniqueConstraint(fields=('sample', 'report'), name='sample_increment_report_constraint'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('al__lte', 100)), name='al_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('al2o3__lte', 100)), name='al2o3_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('arsenic__lte', 100)), name='arsenic_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('c__lte', 100)), name='c_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('cao__lte', 100)), name='cao_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('co__lte', 100)), name='co_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('cr__lte', 100)), name='cr_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('fe__lte', 100)), name='fe_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('mg__lte', 100)), name='mg_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('mgo__lte', 100)), name='mgo_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('mn__lte', 100)), name='mn_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('ni__lte', 100)), name='ni_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('p__lte', 100)), name='p_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('s__lte', 100)), name='s_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('sc__lte', 100)), name='sc_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('si__lte', 100)), name='si_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('sio2__lte', 100)), name='sio2_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('ignition_loss__lte', 100)), name='ignition_loss_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('moisture__lte', 100)), name='moisture_max_100_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('al__gte', 0)), name='al_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('al2o3__gte', 0)), name='al2o3_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('arsenic__gte', 0)), name='arsenic_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('c__gte', 0)), name='c_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('cao__gte', 0)), name='cao_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('co__gte', 0)), name='co_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('cr__gte', 0)), name='cr_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('fe__gte', 0)), name='fe_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('mg__gte', 0)), name='mg_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('mgo__gte', 0)), name='mgo_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('mn__gte', 0)), name='mn_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('ni__gte', 0)), name='ni_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('p__gte', 0)), name='p_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('s__gte', 0)), name='s_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('sc__gte', 0)), name='sc_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('si__gte', 0)), name='si_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('sio2__gte', 0)), name='sio2_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('ignition_loss__gte', 0)), name='ignition_loss_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.CheckConstraint(check=models.Q(('moisture__gte', 0)), name='moisture_min_0_miningsample'),
        ),
        migrations.AddConstraint(
            model_name='miningsample',
            constraint=models.UniqueConstraint(fields=('ridge', 'material', 'month', 'series_number'), name='mining_sample_constraint'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('al__lte', 100)), name='al_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('al2o3__lte', 100)), name='al2o3_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('arsenic__lte', 100)), name='arsenic_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('c__lte', 100)), name='c_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('cao__lte', 100)), name='cao_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('co__lte', 100)), name='co_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('cr__lte', 100)), name='cr_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('fe__lte', 100)), name='fe_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('mg__lte', 100)), name='mg_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('mgo__lte', 100)), name='mgo_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('mn__lte', 100)), name='mn_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('ni__lte', 100)), name='ni_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('p__lte', 100)), name='p_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('s__lte', 100)), name='s_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('sc__lte', 100)), name='sc_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('si__lte', 100)), name='si_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('sio2__lte', 100)), name='sio2_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('ignition_loss__lte', 100)), name='ignition_loss_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('moisture__lte', 100)), name='moisture_max_100_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('al__gte', 0)), name='al_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('al2o3__gte', 0)), name='al2o3_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('arsenic__gte', 0)), name='arsenic_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('c__gte', 0)), name='c_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('cao__gte', 0)), name='cao_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('co__gte', 0)), name='co_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('cr__gte', 0)), name='cr_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('fe__gte', 0)), name='fe_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('mg__gte', 0)), name='mg_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('mgo__gte', 0)), name='mgo_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('mn__gte', 0)), name='mn_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('ni__gte', 0)), name='ni_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('p__gte', 0)), name='p_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('s__gte', 0)), name='s_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('sc__gte', 0)), name='sc_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('si__gte', 0)), name='si_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('sio2__gte', 0)), name='sio2_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('ignition_loss__gte', 0)), name='ignition_loss_min_0_drillcore'),
        ),
        migrations.AddConstraint(
            model_name='drillcoresample',
            constraint=models.CheckConstraint(check=models.Q(('moisture__gte', 0)), name='moisture_min_0_drillcore'),
        ),
    ]
