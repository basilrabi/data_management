from django.test import TestCase
from django.contrib.gis.geos import GEOSGeometry, LineString
from django.db.utils import IntegrityError, InternalError

from custom.functions import setup_triggers
from inventory.models.insitu import Block
from location.models.source import Cluster, ClusterLayout, Crest, Slice

crest_line = LineString(
    (593970, 1051940, 100),
    (593970, 1051950, 110),
    (593980, 1051950, 110),
    (593980, 1051940, 100),
    (593970, 1051940, 100),
    srid=3125
)
crest_line_external = LineString(
    (593990, 1051960, 100),
    (593990, 1051970, 110),
    (594000, 1051970, 110),
    (594000, 1051960, 100),
    (593990, 1051960, 100),
    srid=3125
)
crest_line_internal = LineString(
    (593974, 1051944, 100),
    (593974, 1051946, 110),
    (593976, 1051946, 110),
    (593976, 1051944, 100),
    (593974, 1051944, 100),
    srid=3125
)
crest_line_internal_double = LineString(
    (593974.5, 1051944.5, 100),
    (593974.5, 1051945.5, 110),
    (593975.5, 1051945.5, 110),
    (593975.5, 1051944.5, 100),
    (593974.5, 1051944.5, 100),
    srid=3125
)
crest_line_internal_touch = LineString(
    (593970, 1051940, 100),
    (593970, 1051942, 110),
    (593972, 1051942, 110),
    (593972, 1051940, 100),
    (593970, 1051940, 100),
    srid=3125
)
crest_line_partial = LineString(
    (593979, 1051949, 100),
    (593979, 1051951, 110),
    (593981, 1051951, 110),
    (593981, 1051949, 100),
    (593979, 1051949, 100),
    srid=3125
)
open_string = LineString(
    (593970, 1051940, 100),
    (593970, 1051950, 110),
    (593980, 1051950, 110),
    (593980, 1051940, 110),
    (593970, 1051940, 110),
    srid=3125
)
self_intersection = GEOSGeometry('01020000A0350C0000D40100005E2D0FAAEAEC2141A0D2C82A841130410000000000607540A835CDBBEAEC2141E6AE252484113041000000000060754079734289EBEC21414F8CE4118411304100000000006075409ED889ADEDEC214145A28AD88311304100000000006075407A2F9F37EFEC2141EC51B85E83113041000000000060754034213DD3EFEC2141E7E1683E831130410000000000607540D219BA22F1EC214198D6621E831130410000000000607540703D0A97F1EC2141DFBC9A18831130410000000000607540AADD10C4F1EC2141E2AC79168311304100000000006075401FCEF0E1F1EC21418E9D0519831130410000000000607540E17A14AEF3EC2141FE62C96F831130410000000000607540F0033F70F4EC2141D8899D98831130410000000000607540E8A28BAEF4EC214139769BA38311304100000000006075401E85EB29F6EC214146B6F3398411304100000000006075409B61C07BF6EC21419468E056841130410000000000607540FA3B594DF7EC21418FC2F5588411304100000000006075402AE75DD7F7EC21418E596368841130410000000000607540CE7D76C1F8EC2141DE671770841130410000000000607540D0EA4B05F9EC2141F62E0F81841130410000000000607540A01A2FDDFAEC2141DDB5847C8511304100000000006075404A9433A8FCEC21414A7EB15486113041000000000060754041EF3618FDEC214168C655D88611304100000000006075408CD3B42FFDEC214197D5DFF686113041000000000060754089CB4710FDEC214176D6387287113041000000000060754018E27907FCEC2141048B72D08711304100000000006075405605D5F5FBEC214112DA682788113041000000000060754040218FE4FBEC21415FC0F82E881130410000000000607540C029CFC5FBEC21417B874445881130410000000000607540A4703D4AFBEC21418FC2F58888113041000000000060754039B4C8B6F9EC214146B6F35D89113041000000000060754075931844F9EC21416F1283C088113041000000000060754039B4C8B6F9EC214146B6F35D891130410000000000607540D34D6210FCEC21414E6210588A11304100000000006075406ABC749301ED21413108AC7C8B11304100000000006075408D976ED207ED21411D5A641B8C1130410000000000607540EC51B81E09ED2141D7A3707D8C1130410000000000607540355EBAC90BED214123DBF93E8F1130410000000000607540E92631080CED2141E9263188901130410000000000607540105839740BED2141B07268D19111304100000000006075401D5A643B0CED2141EC51B87E92113041000000000060754046B6F3BD11ED2141D9CEF793921130410000000000607540CDCCCC0C15ED21418716D9EE9211304100000000006075406ABC74D319ED2141E9263108941130410000000000607540469D13AB1EED2141128AF979921130410000000000607540DE91BDBC1FED2141BC1A23DD8F11304100000000006075401AE964DE21ED2141C37183428F11304100000000006075409F9BC76822ED21411353401E8F1130410000000000607540C046FCAB22ED2141E156282E8F1130410000000000607540B9F7C94723ED2141FF159DE98E11304100000000006075403789417023ED214123DBF9DE8E11304100000000006075407CC5577C24ED2141A1BF93958E1130410000000000607540466CAFDF24ED21411F85EB918E11304100000000006075402222222226ED2141FE62C9EF8D11304100000000006075406B79630427ED21418489FE8E8D11304100000000006075403A6DA05327ED2141E17A14AE8C11304100000000006075402FDD240627ED2141378941E08C1130410000000000607540D4621B3F27ED21411A0D13908C11304100000000006075406754704627ED2141D7C75C7D8C11304100000000006075409CC420B026ED21413F355EBA8B11304100000000006075403E4BE98C26ED2141BCA83B868B1130410000000000607540EC51B85E26ED2141BC3182698B11304100000000006075409999993924ED2141745007258A11304100000000006075404B7EB17423ED21415455559D8911304100000000006075400AD7A33023ED2141713D0AD78811304100000000006075400D38480E23ED21411A1D7EA2881130410000000000607540869CFB6C23ED21411F85EB918811304100000000006075406666666624ED21413697462488113041000000000060754077F991EE25ED21417B4C87E5871130410000000000607540D96D8EDD26ED214193563169871130410000000000607540050AFE5E28ED2141DCFBE42387113041000000000060754014FCBD6829ED2141CAB1B013871130410000000000607540758BEA5B2AED214159B7A83E871130410000000000607540ED6755482BED21410038D95D871130410000000000607540FF19D3A42CED21418578BBCA871130410000000000607540986E125B2EED2141B6F3FD388811304100000000006075407B14AEC72FED21418E3727948811304100000000006075408D218AEA30ED2141FE854FE5881130410000000000607540BC66AC6931ED2141A7B8640889113041000000000060754065F09F1834ED21419EC009BC8911304100000000006075408D1DC42134ED2141AB94A3BE891130410000000000607540A3E4363534ED2141841A9AC2891130410000000000607540EACF934C34ED214152B81EC5891130410000000000607540EB51B81E35ED2141333333A389113041000000000060754095CED09537ED214131F2204A89113041000000000060754052B81E8535ED21415B2D6F0C881130410000000000607540251AB84535ED2141877620CD8711304100000000006075406D1F8B9E34ED2141DA2CFD67871130410000000000607540D7A370FD32ED21411F85EB31851130410000000000607540ABAAAAEA31ED214136F1AC088511304100000000006075405555551530ED21416A4523218411304100000000006075407B14AEC72FED2141ACAAAA8A831130410000000000607540EA6B8BC32FED2141515F5B4C8311304100000000006075403C2EC3632FED2141D7917A1D831130410000000000607540A0E5FC592FED214125FE35A2821130410000000000607540165FF19531ED21418CD668CD801130410000000000607540121D185134ED2141A7B78CBA7F1130410000000000607540EFE5F3DE38ED2141F0AF11FF7C1130410000000000607540A628650A3AED214112FF1A717C1130410000000000607540BC3182C93BED2141D1DFC92A7C11304100000000006075409F5D40EC3CED2141240EAF3D7C1130410000000000607540713D0AD73EED2141CF69035D7B11304100000000006075403096FC623FED2141B81E852B7B11304100000000006075407877777740ED2141CDCCCCCC7A11304100000000006075404F1BE87441ED2141A4703D127B11304100000000006075404580D6F642ED21418FC2F5287C1130410000000000607540739EAE7444ED2141B9254E7D7B1130410000000000607540592D6F0C45ED2141175FF1157B11304100000000006075405369C8B945ED2141A721E7BE7B1130410000000000607540D29073DF46ED2141EC51B8FE7C1130410000000000607540935F2C594AED2141EAB4819E7C113041000000000060754015AE47814AED2141D7A3709D7C11304100000000006075403E0AD7A34AED214106FEDAAD7C11304100000000006075400C14FCBD4AED21412EA3E5AE7C11304100000000006075401E1255E44EED2141AE47E1FA7C1130410000000000607540B29DEF374FED2141378941007D1130410000000000607540E8BF423052ED21410D951DC67C1130410000000000607540367A9F3853ED2141C4703B2B7D11304100000000006075402A419E9253ED214185FD47587D113041000000000060754024EC3F4255ED2141529432C57D11304100000000006075404338DEA055ED2141007B95D67D11304100000000006075401016CE1658ED2141133B5AE07E1130410000000000607540CE4EF17E59ED21417F20893C7F1130410000000000607540A1EACF935AED21413F4F32B17F11304100000000006075406B9ED1D45BED2141EBB8852A801130410000000000607540A70D74DA5DED2141D08A46428111304100000000006075404CE90C5D5FED214144D59FC7811130410000000000607540416C2ACD5FED2141545555F581113041000000000060754065B5BC3160ED21418FC2F528821130410000000000607540E3C3E22161ED214126915DD9821130410000000000607540DDD1E03E63ED21416F30CB7A831130410000000000607540207621F763ED2141ACC6A09A8311304100000000006075403E0AD71B64ED2141C74B37E5831130410000000000607540A5D450FB64ED2141E558D83984113041000000000060754095FD31CC65ED214150FE2282841130410000000000607540CDCCCC8C66ED21418C4C2DC98411304100000000006075409CC420D868ED21416DE7FB89851130410000000000607540D591080269ED2141CD39949B851130410000000000607540233FEE2469ED2141F80ACBA98511304100000000006075404DCB357269ED2141280CDDBF8511304100000000006075401376F3DB6AED214125243BFD85113041000000000060754054DF8E076CED21419AD47C008611304100000000006075406F3641456CED21415E3CB0FB8511304100000000006075406A21E60F6DED21414164B2AF8511304100000000006075407C719A766EED2141D97BEC298511304100000000006075407850BCD36FED2141C0B8D08E841130410000000000607540E18DB38471ED2141C56E78FE831130410000000000607540F5F673B871ED2141C38BE18083113041000000000060754048E17A7471ED21410A70D6AC821130410000000000607540904DC43D71ED2141FCC6DC20821130410000000000607540E3A59B3470ED2141DBF97EDA80113041000000000060754044F03EC46FED2141F141F83E801130410000000000607540A162ABE66EED21418C681A7D7F11304100000000006075401035FD106EED214152EE00C57E1130410000000000607540CE3F63FA6CED21415F4149077E1130410000000000607540A8AE0BC16CED2141DCE2D5DB7D113041000000000060754094D967566CED2141D01BA5127D113041000000000060754087BBC18D6AED2141A8F282EA7B1130410000000000607540EC51B8A669ED2141AE47E14C7B11304100000000006075406A81823F68ED214108BC87D77A1130410000000000607540B40B88CD67ED21410D884D657A1130410000000000607540740964ED66ED214148541162791130410000000000607540DD1B497F65ED21417E322438781130410000000000607540906FE3AE64ED21418B61510B77113041000000000060754095869C7B64ED2141C5A6D2D0761130410000000000607540333333C364ED2141333333537611304100000000006075405A643B5F66ED21418B6CE7BB751130410000000000607540E7E81AB567ED214100000040751130410000000000607540BF9F1AAF6AED21411D5A647B751130410000000000607540B8A0E27C6FED2141515210B975113041000000000060754056EEF7AF71ED2141BD358E45751130410000000000607540E78A4DE07CED2141A0FAC9B4711130410000000000607540DE5113EB81ED21414CCAD4146F1130410000000000607540E17A14AE87ED2141A4703D4A6F1130410000000000607540C3F528FC88ED21410A640D736D1130410000000000607540BBDFA7FB8BED2141DB49A2DD6C1130410000000000607540AB7485318DED2141E10549796C113041000000000060754090C2F5A88DED21419A9999D96B11304100000000006075407F27ABC58DED21412C0D39676B11304100000000006075401E85EB518FED2141B81E854B6B1130410000000000607540A2AF1A7A90ED21414AC689646B113041000000000060754048E17A9491ED2141815DA74F6B113041000000000060754064B739F691ED2141B01AFA2A6B1130410000000000607540B5A416CD92ED2141E4E59A126B11304100000000006075405C8FC25593ED21413D24AAF86A1130410000000000607540CBA145FE94ED2141E3A59B906A11304100000000006075401DB249E295ED21413AD6094A6A11304100000000006075401F50223198ED2141F3845CED681130410000000000607540EB51B89E98ED2141A34FFAC4681130410000000000607540582630D598ED2141637205B168113041000000000060754063C92FB699ED2141EEEEEE8E68113041000000000060754049E843269AED2141BF94847E6711304100000000006075402B8716D99AED214193180416671130410000000000607540E00865F49AED2141D940A70D6711304100000000006075407F6ABC749DED2141DFDDDDDD661130410000000000607540676666469EED214173DA40D76711304100000000006075402A0E19FB9EED21414D0116DD6711304100000000006075400823EDD89FED2141322C6AE167113041000000000060754085EB5138A0ED21419A9999A167113041000000000060754095869CFBA0ED2141C9B9CFBE671130410000000000607540B1E41735A2ED214114AE4742671130410000000000607540E9F98D4BA3ED2141D6CF052767113041000000000060754052B81E05A4ED2141EAEF64B566113041000000000060754076FF5212A5ED21413CFC448066113041000000000060754061E5D01AA5ED2141BA490C7A661130410000000000607540DC0C0E27A5ED21410214A475661130410000000000607540F460352DA5ED2141BDAED26F66113041000000000060754013FD9D4CA5ED21413495863C64113041000000000060754029197EB3A7ED2141F710D296631130410000000000607540E69F314DA9ED21414A930146631130410000000000607540907BCD85A9ED2141212222226311304100000000006075401E85EBB1A9ED2141CBA145166311304100000000006075409892D007AAED214163ABE6BC62113041000000000060754066666666AAED214140BB80186211304100000000006075406D35780EA9ED214117EF598A6111304100000000006075408289FECEA8ED2141713D0A976111304100000000006075405642D51FA8ED2141E3C3B89F611130410000000000607540B1A93464A6ED214170DBB68D61113041000000000060754012561D8EA5ED2141BBC114B96111304100000000006075401F85EB51A5ED21410000004062113041000000000060754000000000A4ED2141F6285CAF6211304100000000006075406DF5E2D8A3ED214168680ABA621130410000000000607540838AAD9AA3ED2141180823ED621130410000000000607540CE26A8D8A2ED214139A9328663113041000000000060754038488E68A2ED2141322C6A2164113041000000000060754091E06B59A2ED2141BD9BC64A641130410000000000607540351FC0CEA1ED214123D3CB166511304100000000006075404DA521C7A1ED214128FA3B296511304100000000006075409F7CDC54A1ED21417E2A4BB1651130410000000000607540DCBD217BA0ED2141A52B8CE96511304100000000006075404E792E619FED21416427767266113041000000000060754095312CEA9EED2141E1734B7C661130410000000000607540D069037D9DED21415C8FC2BD6611304100000000006075406EDBB60D9CED21415B2D6F3C661130410000000000607540000000E09BED2141DE671720661130410000000000607540111EFA9C9BED2141C21CE43F651130410000000000607540BBAB5DCA9BED2141E3AA2EC2641130410000000000607540B578530B9BED2141878888E8631130410000000000607540168160D19BED214154AF2335631130410000000000607540F4E500CB9DED2141762465FD621130410000000000607540BEE22B3E9EED2141E83EBBC06211304100000000006075405343ED199FED21418FFACE46621130410000000000607540394DE4709FED21417B5B03FC611130410000000000607540416C2A6D9FED2141786304C3611130410000000000607540CDCCCC4C9FED21418788884861113041000000000060754018C726959FED2141C1812FF1601130410000000000607540D9C64F0BA0ED2141F869B10D60113041000000000060754029658AD2A0ED214162F616E65F11304100000000006075402D6F8CE0A2ED21415B2D6FDC5F1130410000000000607540222222A2A3ED2141B0E4170B601130410000000000607540E7E94A2FA4ED2141D69CA7CB5F1130410000000000607540F28DB60FA5ED2141886E2B315F113041000000000060754037D48B24A5ED2141021219155F113041000000000060754083D385F1A5ED2141C3F5285C5D1130410000000000607540CA269BECA5ED2141CBE7BD3C5D11304100000000006075404CF477F2A5ED2141CF7D76215D113041000000000060754097374630A6ED2141B75551BE5B1130410000000000607540EB3612BFA6ED21416FAFF0605B1130410000000000607540C4E9E31FA7ED21411EFFC8F35A1130410000000000607540E9F6FED8A7ED2141B2BC18B95A113041000000000060754002B1A934A8ED21412ABEE2EB59113041000000000060754066815716A8ED2141277780B25911304100000000006075401BF1AF11A8ED21416F58FB46591130410000000000607540B6F3FDD4A9ED214152B81E45581130410000000000607540F5285C2FAAED21413D0AD71B581130410000000000607540860F6738AAED2141B98C7AEB57113041000000000060754076BE9F4AAAED2141CBA145D65711304100000000006075409A72DE75ABED214164248FA9561130410000000000607540B5814E1BACED2141000000B8551130410000000000607540493B5620ACED21414E577A67551130410000000000607540FE9E5B62ACED2141B455733E5511304100000000006075406A039DB6ACED214185FD4718551130410000000000607540C41CE6B0ADED2141DFCE1A87541130410000000000607540FCF45200AEED2141D7AAF637541130410000000000607540EADABD7AAEED2141FDF23AA7531130410000000000607540DFED3BCFAEED21418C93AD5E531130410000000000607540308406C3AFED214146324E645211304100000000006075406C88C506B0ED214178CD5E17521130410000000000607540DC0AC52DB0ED21413B49B4D3511130410000000000607540486C49A9B0ED21418654E49851113041000000000060754074048AB6B1ED2141238934F65011304100000000006075407B14AE07B2ED214185EB51C05011304100000000006075405EE99D01B2ED21417860F72F5011304100000000006075401BE8B4C1B2ED2141B7BC31024F11304100000000006075404D6A3EC0B3ED21416FA0D3464E11304100000000006075404730D1DFB5ED2141D805C4A64D113041000000000060754063C92F16B6ED2141F6285C974D1130410000000000607540FA7E6ABCB6ED2141B07268914D1130410000000000607540653BDF4FB9ED214179E926314E113041000000000060754075931804BCED21418FC2F5284D113041000000000060754081D8549ABCED21412ABEE21B4D1130410000000000607540BFB638B8BCED21413D24AA184D1130410000000000607540964909C3BCED2141C877D3184D113041000000000060754016B510F3BCED214124F421134D11304100000000006075401621DE6EC1ED21410CA3FD664D1130410000000000607540C17B7841C4ED214195E290B14D1130410000000000607540D069039DC5ED214111C2BA45501130410000000000607540ED026253C6ED2141AFA934E450113041000000000060754027ABE50DC7ED2141B1F88AAF501130410000000000607540ED941363C8ED214122CF0F285011304100000000006075408F0D5BE3C8ED2141EB32E8CD4F11304100000000006075404F1BE8F4C9ED2141823AA8A34E113041000000000060754074DA4067CEED2141501BE8944C1130410000000000607540CA6A7923D5ED2141D4F2C6E84E113041000000000060754082DDBF94D5ED2141BBD23B034F1130410000000000607540036253A9D5ED21417AB25AFE4E11304100000000006075404D5AC5A4D5ED2141C5B64B2C4F11304100000000006075401EA4BBA2D5ED2141D97295344F11304100000000006075401D9FBEB6D5ED2141515F5B5C4F113041000000000060754030FAD8B0D6ED214169BE9079511130410000000000607540F064B5BCD6ED2141E83EBB605211304100000000006075407F27ABA5D6ED21417EC557BC521130410000000000607540C2F5281CD7ED2141A8C64BB752113041000000000060754033333323D7ED2141000000885211304100000000006075408A49AB98D8ED21415AAAB3E5511130410000000000607540E0D7BF1AD9ED2141C84ECF605111304100000000006075407BBEFA69DAED2141B25DC65B501130410000000000607540AC61B4DFDAED2141EB6B8B0B501130410000000000607540922449F2DBED21417B14AE074F1130410000000000607540184B7EF1DBED2141713D0AF74E1130410000000000607540736891EDDBED2141E7FBA9B14E1130410000000000607540333333B3DBED2141B9254E7D4D11304100000000006075405FA78EBCDBED214160B3F45F4D1130410000000000607540E80128C8DBED2141045090D64C1130410000000000607540ED2DCC9EDBED21415A98BDA54C11304100000000006075405E406CAADCED21413C41A3D64B113041000000000060754046B6F3B5DDED2141F4FDD4CC4A1130410000000000607540CEDC7D92DDED214123FA14034A113041000000000060754054E3A5E3DDED214191ED7C934911304100000000006075409CC1E104DFED21415FFDC8FC481130410000000000607540CDBAD62CDFED21416047EAF548113041000000000060754009D8307DE0ED21419B0966CA4811304100000000006075405FA5FBD9E2ED21415CC87D584811304100000000006075409BECA5D1E3ED21418A3C44D74711304100000000006075401694748CE4ED214116070B1A471130410000000000607540D96D8E5DE5ED2141B8E8A26B46113041000000000060754000000000E8ED21413D0AD723461130410000000000607540BEE22BBEE9ED2141243D4DA8451130410000000000607540301A547FEBED21413634057D451130410000000000607540CDCCCCCCEDED21419A999959451130410000000000607540BE9F1A2FF0ED2141C3F5286C44113041000000000060754033333373F0ED21418D25BF584411304100000000006075401620F73AF2ED214139B4C816431130410000000000607540C628FBA5F3ED214144FF7B9A42113041000000000060754018895DD4F3ED214132911E6842113041000000000060754021B072E8F3ED2141508D974E4211304100000000006075401A65AC22F5ED2141F9F7B1354111304100000000006075407178EDBDF7ED2141CAF4B255411130410000000000607540E5174BFEF7ED21415642D55F4111304100000000006075405506E27EF8ED21417B0C6354411130410000000000607540676666E6F8ED2141B1F88AEF40113041000000000060754099999919FAED2141411DD4014011304100000000006075407BB667FBFAED2141E2311E633F1130410000000000607540295C8F02FCED2141FF9DAC263F1130410000000000607540E2EDAAFBFDED21413D24AAA83E1130410000000000607540C69B5AFCFEED21418B52A6683E1130410000000000607540F247B2D7FFED2141124034B73D113041000000000060754069492D1A01EE2141A4D9959F3D11304100000000006075409592E66C01EE2141EBC9B5943D11304100000000006075402222225203EE214184CA0EB73C113041000000000060754076BE9FD604EE2141C74B37FF3B1130410000000000607540D387E54C07EE2141D1769DF53911304100000000006075400BD7A36208EE214185EBD14D3911304100000000006075401F85EBC208EE214148E1FA3139113041000000000060754058BBBF5209EE214132D90DB2381130410000000000607540DF53A40B0AEE21411FAC5B943811304100000000006075402D9B7FC60BEE2141831FF881371130410000000000607540FAE47CB80CEE2141F6CB9D04371130410000000000607540AE47E1A80FEE21411F85EBDC361130410000000000607540A1DF0D7A10EE2141656741B63611304100000000006075403B3B3BBB11EE2141A7A8A86836113041000000000060754000B59AC511EE2141E110DF62361130410000000000607540599445D911EE2141504A0B5B361130410000000000607540A5DFBE8E12EE2141234A7BA33511304100000000006075401A79106514EE2141815D527934113041000000000060754038375AF815EE21417441319C3311304100000000006075405EA412F715EE2141878888883311304100000000006075400AD99B9016EE2141CEC7E07C33113041000000000060754008DC265418EE21413238B6563311304100000000006075401F90ACF318EE2141860C95DD3211304100000000006075405BEE9C981AEE214162845DBE311130410000000000607540602CF9451CEE2141D7A3703D3111304100000000006075403905D21E1DEE21419A693603311130410000000000607540259973B41FEE21410335CBC72F1130410000000000607540000000C01FEE21417DC3DAB72F11304100000000006075406DDBB6ED1FEE2141268CA3B32F1130410000000000607540AE47E17A22EE2141AE47E17A2F1130410000000000607540C46D4DC123EE2141BF33E0602F11304100000000006075406B2D23CC23EE214159DFCA5C2F1130410000000000607540C6F82BDF23EE2141AE7946532F113041000000000060754077A2ABF724EE2141BDF99A9E2E1130410000000000607540B6D9295E25EE214152B81EC52E1130410000000000607540915135C525EE21414D82D3C52E113041000000000060754074A9499727EE2141191A87A12E1130410000000000607540197FE54B28EE2141CDFE31652E11304100000000006075403412F0CD28EE21419EF4491F2E1130410000000000607540E6646C8E2AEE21418FC0FDC82D113041000000000060754014AE47612BEE2141F6285CAF2D1130410000000000607540F69C78CB2BEE2141432490A42D11304100000000006075409740D6302DEE21418D8305852D11304100000000006075405F6739002FEE2141885C6A512D1130410000000000607540D14BFC1631EE21417FF271D32C1130410000000000607540B1122B3131EE2141CDB22CCB2C1130410000000000607540821768DD32EE2141D7F1EC612C1130410000000000607540A66F62FA34EE2141AC48BC0A2C1130410000000000607540C8A6095235EE21410A5C0EFA2B11304100000000006075403D00056937EE214115B3B07E2B1130410000000000607540641371EF37EE21419A9999592B11304100000000006075409DEDCB3A3AEE2141ECF334E12A1130410000000000607540086E4D0E3DEE2141F1A3BC8F2911304100000000009075402B2DDB693DEE2141EC320A4913113041000000000090754029314F3C2BEE2141478D20B60B1130410000000000907540EE7C728FFAED2141478D20B60B113041000000000090754004187C6DEBED21418BFF451E141130410000000000907540274FC680EBED21412F662E533D113041000000000090754030CD66E5E2ED21411142B81E3D113041000000000090754090550291DCED21419BA8A08B42113041000000000090754039B83705D2ED2141C97B06724211304100000000009075408B8C728EC9ED21411FDA42E93D1130410000000000907540BDB55B6F9EED214168B56BD43D1130410000000000907540950F4D4E9EED2141C7E4A762341130410000000000907540CD01ABC79AED2141FF2C0ED3321130410000000000907540C0870D008CED21417807E4BD321130410000000000907540955F86F789ED21416689F421321130410000000000907540ADAD65D789ED214172E987A82A11304100000000009075409989D92786ED2141ED8776B22811304100000000009075408BB08D2063ED214100B4FBCF281130410000000000907540E3406B375DED2141EB21D9D92A1130410000000000907540A1938E0B5DED214193D40B75321130410000000000907540C0794AB35AED2141FCAF3648331130410000000000907540B9259B8645ED214196CA471D331130410000000000907540BC217B5F43ED21419EA0F4503211304100000000009075407984086943ED2141C39587922711304100000000009075401108732C39ED2141971D3C48241130410000000000907540E7FDE97D0DED21419800D23C241130410000000000907540C22D746AFFEC21417CD746512411304100000000009075401F8B8BE8FEEC21410385980C241130410000000000907540B6AD93CCFEEC214186E2202320113041000000000090754077C1940CFAEC2141F52B47A41E113041000000000090754070DC8336EBEC2141140EB5971E11304100000000009075406BBF47AFEAEC2141FB3857281E11304100000000009075406F60D2E5EAEC2141FFFE63981611304100000000009075400890B4D2E6EC2141E3C92DBC1411304100000000009075401EEDF1E4D4EC21412003907E1411304100000000009075400C3AA73BD1EC2141DE83ED121711304100000000009075409A810390D1EC214196568094291130410000000000907540C449E9EAD5EC2141F542C2682B113041000000000090754005829FD6EEEC214167888B5B2B11304100000000009075409BB862D2F0EC2141DFFD5E332C11304100000000009075401CDFA1AAF0EC21418C0643E83411304100000000009075402BE9D27AF0EC21412478212A49113041000000000090754073D03040FBEC2141FE6A14924D1130410000000000907540120C54463AED214194B576B64D11304100000000009075404B5088B843ED214145DA0422491130410000000000907540CB3CE5AC43ED214150625E76451130410000000000907540F62AA48A45ED214107255FDE441130410000000000907540BC2F056C5AED2141E89782DC44113041000000000090754015E12B275DED2141E91A806F461130410000000000907540CFE5C71B5DED2141663ECDCE5A11304100000000009075400CE3C2AB5AED2141F92002D45B1130410000000000907540B147FE9B2DED21412A55C3B75B113041000000000090754043D17BD723ED21412F574A286611304100000000009075405BBB00F523ED2141B392637C6B113041000000000090754034D79D271AED21412247558D6B113041000000000090754061AF143311ED214186AAA1077011304100000000009075404FFDD2A7F6EC2141E0ED070F701130410000000000907540A768B0CCE7EC21411C4FAC357811304100000000009075400D43D0D8E7EC2141C56CF7918311304100000000009075405E2D0FAAEAEC2141A0D2C82A841130410000000000607540')
toe_line = LineString(
    (593980, 1051940, 100),
    (593970, 1051940, 100),
    srid=3125
)
road_line = LineString(
    (593970, 1051940, 100),
    (593970, 1051950, 110),
    srid=3125
)


class SliceTest(TestCase):

    @classmethod
    def setUpTestData(cls):
        setup_triggers()

    def setUp(self):
        pass

    def test_blocked_removal_when_surveyed(self):
        slice_geom = GEOSGeometry('SRID=3125;LINESTRING(591095 1051085 96, 591095 1051105 96, 591105 1051105 96, 591105 1051095 96, 591115 1051095 96, 591115 1051085 96, 591095 1051085 96)')
        block = Block(name='b1', z=99, ni=1, fe=40, co=0.1,
                      geom=GEOSGeometry('SRID=3125;POINT (591100 1051100)'))
        block.save()
        block = Block(name='b2', z=99, ni=2, fe=42, co=0.2,
                      geom=GEOSGeometry('SRID=3125;POINT (591110 1051100)'))
        block.save()
        block = Block(name='b3', z=99, ni=1, fe=40, co=0.1,
                      geom=GEOSGeometry('SRID=3125;POINT (591100 1051090)'))
        block.save()
        block = Block(name='b4', z=99, ni=1, fe=40, co=0.1,
                      geom=GEOSGeometry('SRID=3125;POINT (591110 1051090)'))
        block.save()
        cluster = Cluster(name='c1')
        cluster.save()
        cluster.refresh_from_db()
        block = Block.objects.get(name='b1')
        block.cluster = cluster
        block.save()
        block = Block.objects.get(name='b2')
        block.cluster = cluster
        block.save()
        block = Block.objects.get(name='b3')
        block.cluster = cluster
        block.save()
        block = Block.objects.get(name='b4')
        block.cluster = cluster
        block.save()
        slice = Slice(z=96, layer=2, geom=slice_geom)
        slice.save()
        cluster.refresh_from_db()
        cluster.date_scheduled = '2020-05-30'
        cluster.save()
        layout = ClusterLayout(cluster=cluster, layout_date='2020-05-30')
        layout.save()
        slice = Slice.objects.get(z=96, layer=2, geom__equals=slice_geom)
        self.assertRaises(InternalError, slice.delete)

    def test_valid_inputs(self):
        slice1 = Slice(z=100, layer=2, geom=crest_line)
        self.assertEqual(slice1.save(), None)
        slice1 = Slice(z=100, layer=7, geom=road_line)
        self.assertEqual(slice1.save(), None)
        slice1 = Slice(z=100, layer=8, geom=toe_line)
        self.assertEqual(slice1.save(), None)
        slice1 = Slice(z=100, layer=2, geom=crest_line_external)
        self.assertEqual(slice1.save(), None)

    def test_invalid_crest_line(self):
        slice1 = Slice(z=100, layer=2, geom=open_string)
        self.assertRaises(IntegrityError, slice1.save)

    def test_invalid_other_line(self):
        slice1 = Slice(z=100, layer=3, geom=open_string)
        self.assertRaises(IntegrityError, slice1.save)

    def test_invalid_overlap_exact(self):
        slice1 = Slice(z=100, layer=2, geom=crest_line)
        slice1.save()
        slice2 = Slice(z=100, layer=2, geom=crest_line)
        self.assertRaises(InternalError, slice2.save)

    def test_invalid_self_intersection(self):
        slice = Slice(z=100, layer=2, geom=self_intersection)
        self.assertRaises(IntegrityError, slice.save)

    def test_invalid_triple_ring_between(self):
        slice3 = Slice(z=100, layer=2, geom=crest_line_internal_double)
        slice3.save()
        slice1 = Slice(z=100, layer=2, geom=crest_line)
        slice1.save()
        slice2 = Slice(z=100, layer=2, geom=crest_line_internal)
        self.assertRaises(InternalError, slice2.save)

    def test_invalid_triple_ring_expanding(self):
        slice3 = Slice(z=100, layer=2, geom=crest_line_internal_double)
        slice3.save()
        slice2 = Slice(z=100, layer=2, geom=crest_line_internal)
        slice2.save()
        slice1 = Slice(z=100, layer=2, geom=crest_line)
        self.assertRaises(InternalError, slice1.save)

    def test_invalid_triple_ring_shrinking(self):
        slice1 = Slice(z=100, layer=2, geom=crest_line)
        slice1.save()
        slice2 = Slice(z=100, layer=2, geom=crest_line_internal)
        slice2.save()
        slice3 = Slice(z=100, layer=2, geom=crest_line_internal_double)
        self.assertRaises(InternalError, slice3.save)

    def test_overlap_internal(self):
        slice1 = Slice(z=100, layer=2, geom=crest_line)
        slice1.save()
        slice2 = Slice(z=100, layer=2, geom=crest_line_internal)
        slice2.save()
        crest = Crest.objects.get(z=slice2.z, geom__bboverlaps=slice2.geom)
        self.assertEqual(crest.geom.area, 100 - 4)

    def test_overlap_internal_touch(self):
        slice1 = Slice(z=100, layer=2, geom=crest_line)
        slice1.save()
        slice2 = Slice(z=100, layer=2, geom=crest_line_internal_touch)
        self.assertRaises(InternalError, slice2.save)

    def test_overlap_partial(self):
        slice1 = Slice(z=100, layer=2, geom=crest_line)
        slice1.save()
        slice2 = Slice(z=100, layer=2, geom=crest_line_partial)
        self.assertRaises(InternalError, slice2.save)
